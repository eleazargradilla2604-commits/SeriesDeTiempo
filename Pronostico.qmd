---
title: "Pronostico"
format: 
  html:
    embed-resources: true
---

```{r}
library(tidyverse)
library(fpp3)
```

```{r}
gas_train <- aus_production |>
  filter_index(. ~ "2007 Q2")
gas_train
```

```{r}
gas_train |>
  autoplot(log(Gas))
```

```{r}
gas_lambda <- gas_train |>
  features(Gas, features = guerrero) |>
  pull()
gas_lambda
```

```{r}
gas_train |>
  autoplot(box_cox(Gas, lambda = gas_lambda))
```

```{r}
gas_fit <- gas_train |> 
  model(
    drift = RW(box_cox(Gas, gas_lambda) ~ drift()),
    snaive = SNAIVE(box_cox(Gas, gas_lambda)),
  )

gas_fit
```

```{r}
gas_aug <- gas_fit |>
  augment()
gas_aug
```

```{r}
gas_aug |>
  autoplot(.innov) +
  facet_wrap(~.model, ncol = 1, scales = "free_y")
```

```{r}
gas_aug |>
  ACF(.innov) |>
  autoplot() +
  facet_wrap(~.model, ncol = 1, scales = "free_y")
```

```{r}
#| warning: false

gas_aug |> 
  ggplot(aes(x = .innov, fill = .model)) +
  geom_histogram() +
  facet_wrap(~.model, ncol = 1, scales = "free_y")
```

```{r}
gas_fit |>
  select(drift) |>
  gg_tsresiduals()
```

```{r}
gas_fc <- gas_fit |>
  forecast(h = "3 years")

gas_fc
```

```{r}
gas_fc |>
  autoplot(aus_production) +
  facet_wrap(vars(.model), scale = "free_y", ncol = 1)
```

```{r}
gas_fc |>
  accuracy(aus_production) |>
  arrange(RMSE)
```

#Pronostico con descomposicion

```{r}
gas_dcmp <- gas_train |>
  model(
    dcmp = decomposition_model(                                           
      STL(box_cox(Gas, gas_lambda) ~season(window = "periodic"), robust = TRUE),
      RW(season_adjust~ drift()),
      SNAIVE(season_year)
    )
  )

gas_dcmp
```

```{r}
gas_dcmp |>
  gg_tsresiduals()
```

```{r}
gas_dcmp |>
  augment() |>
  features(.innov, ljung_box, lag = 8)
```

```{r}
gas_dcmp_fc <-  gas_dcmp |>
  forecast(h = "3 years")

gas_dcmp_fc

gas_dcmp_fc |>
  autoplot(aus_production |> filter_index("1999 Q1" ~.))
```

```{r}
gas_fc_full <- gas_fc |>
  full_join(gas_dcmp_fc)


gas_fc_full
```

```{r}
gas_fc_full |>
  accuracy(aus_production) |>
  arrange(RMSE)

gas_fc_full |>
  autoplot(aus_production |> filter_index("1999 Q1"~.), level = NULL)
```

```{r}
gas_fit_full <- gas_fit |>
  cross_join(gas_dcmp) |>
  mutate(combinado = (snaive + dcmp)/2)

gas_fit_full
```

```{r}
gas_fcst_full <- gas_fit_full |>
  forecast(h = "3 years")

gas_fcst_full |>
  filter(.model %in% c("dcmp", "combinado", "snaive")) |>
  autoplot(aus_production  |> filter_index("1999 Q1"~.), level = NULL)
```

```{r}
gas_fcst_full |>
  accuracy(aus_production) |>
  arrange(RMSE)
```

#ETS \## SES

```{r}
ses <- gas_train |>
  model(
    ses = ETS(Gas ~
                error("A") +
                trend("N") +
                season("N")
              )
  )

ses
```

```{r}
report(ses)
```

```{r}
aus_prod_recent <- aus_production |> 
  filter_index("1995 Q1" ~ .)
```

```{r}
ses |> 
  forecast(h = "3 years") |> 
  autoplot(aus_prod_recent)
```

## tendencia lineal

```{r}
holt <- gas_train |> 
  model(
    holt = ETS(Gas ~ error("A") + trend("A") + season("N"))
  )

holt

report(holt)
```

```{r}
holt |> 
  forecast(h = "3 years") |> 
  autoplot(aus_prod_recent)
```

```{r}
gas_dcmp_holt <- gas_train |> 
  model(
    stlf_ets = decomposition_model(
      STL(box_cox(Gas, gas_lambda) ~ season(window = "periodic")),
      ETS(season_adjust ~ error("A") + trend("Ad") + season("N")),
      SNAIVE(season_year)
    )
  )

gas_fit_full2 <- gas_fit_full |> 
  cross_join(gas_dcmp_holt)

gas_fcst_full2 <- gas_fit_full2 |> 
  forecast(h = "3 years")

p <- gas_fcst_full2 |> 
  autoplot(aus_prod_recent, level = NULL)

plotly::ggplotly(p)

gas_fcst_full2 |> 
  accuracy(aus_production) |> 
  arrange(RMSE)
```

### Tendencia amortiguada

```{r}
ets_trend <- gas_train |> 
  model(
    holt = ETS(Gas ~ error("A") + trend("A") + season("N")),
    tend_amort = ETS(Gas ~ error("A") + trend("Ad") + season("N"))
  )

ets_trend

ets_trend |> 
  select(tend_amort) |> 
  report()

ets_trend |> 
  forecast(h = "3 years") |> 
  autoplot(aus_prod_recent, level = NULL)
```

## Holt-winters

```{r}
gas_train |> 
  autoplot(Gas)

hw <- gas_train |> 
  model(
    hw = ETS(Gas ~ error("M") + trend("Ad", phi = 0.8) + season("M"))
  )

report(hw)

hw |> 
  forecast(h = "3 years") |> 
  autoplot(aus_prod_recent)
```

# Comparando los mejores modelos hasta ahora

```{r}
STLF <-  decomposition_model(
  STL(box_cox(Gas, gas_lambda) ~ season(window = "periodic"), robust = TRUE),
      RW(season_adjust ~ drift())
)

STLF_ets <- decomposition_model(
  STL(box_cox(Gas, gas_lambda) ~ season(window = "periodic"), robust = TRUE),
  ETS(season_adjust ~ error("A") + trend("Ad") + season("N"))
)
      

gas_fit_todos <- gas_train |> 
  model(
    hw = ETS(Gas ~ error("M") + trend("Ad", phi = 0.8) + season("M")),
    snaive = SNAIVE(box_cox(Gas, lambda = gas_lambda)),
    hw_boxcox = ETS(box_cox(Gas, lambda = gas_lambda) ~ error("A") + trend("Ad") + season("A")),
    stlf = STLF,
    stlf_ets = STLF_ets
  )

gas_fit_todos
```

```{r}
gas_fc_todos <- gas_fit_todos |> 
  mutate(
    top2 = (snaive + hw)/2,
    todos = (snaive + hw + stlf_ets + hw_boxcox + stlf)/5
  ) |> 
  forecast(h = "3 years")

gas_fc_todos |> 
  accuracy(aus_production) |> 
  arrange(RMSE)

p <- gas_fc_todos |> 
  autoplot(aus_prod_recent, level = NULL)

plotly::ggplotly(p)
```


```{r}
gas_fit_new <- gas_train |>
  model(
    hw = ETS(Gas ~ error("M") + trend("Ad", phi = 0.8) + season("M")),
    snaive     = SNAIVE(box_cox(Gas, gas_lambda)),
    ets_auto   = ETS(box_cox(Gas, gas_lambda)),
    ets_damped = ETS(box_cox(Gas, gas_lambda) ~ error("A") + trend("Ad") + season("M")),
    arima = ARIMA(box_cox(Gas, gas_lambda) ~ pdq(0,1,1) + PDQ(0,1,1)),
  )

gas_fit_new

```
```{r}
gas_fc_new <- gas_fit_new |> 
  mutate(
    top2 = (snaive + hw)/2,
    todos = (snaive + hw + ets_damped + arima + ets_auto)/5
  ) |> 
  forecast(h = "3 years")

gas_fc_new |> 
  accuracy(aus_production) |> 
  arrange(MAPE)

p <- gas_fc_new |> 
  autoplot(aus_prod_recent, level = NULL)

plotly::ggplotly(p)
```

Combinare El Ets ajustado con el snaive y el hw que son los dos mas cercanos, y
el Arima con el snaive que son los mas opuestos, para ver si se encuentran en un
punto medio

```{r}
gas_fit_new2 <- gas_train |>
  model(
    hw = ETS(Gas ~ error("M") + trend("Ad", phi = 0.8) + season("M")),
    snaive     = SNAIVE(box_cox(Gas, gas_lambda)),
    ets_damped = ETS(box_cox(Gas, gas_lambda) ~ error("A") + trend("Ad") + season("M")),
    arima = ARIMA(box_cox(Gas, gas_lambda) ~ pdq(0,1,1) + PDQ(0,1,1)),
  )

gas_fit_new

```

```{r}
gas_fc_new2 <- gas_fit_new2 |> 
  mutate(
    top3 = (snaive + hw + ets_damped)/3,
    sArima = (snaive + arima)/2
  ) |> 
  forecast(h = "3 years")

gas_fc_new2 |> 
  accuracy(aus_production) |> 
  arrange(RMSE)

p <- gas_fc_new2 |> 
  autoplot(aus_prod_recent, level = NULL)

plotly::ggplotly(p)
```

De todos los modelos que he trabajado, el sArima es el que tiene un MAPE mas 
peque√±o, de tan solo 1.74



